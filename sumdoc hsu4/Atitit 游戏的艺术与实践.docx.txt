Atitit 游戏的艺术与实践

	游戏引擎市场地位	1
	1.1. cocos2d家族成员	1
	1.2. 从下表可知，不同分支引擎支持不同的目标平台并使用不同的编程语言。	2
	1.3. 粒子系统	3
	1.4. 简介	3
	1.5. 粒子属性	3
	1.6. 骨骼动画详解－Spine	5
	1.7. Cocos2d-x游戏开发实战精解	6
	1.8. 《Unity 5.X 3D游戏开发技术详解与典型案例》(吴亚峰...)【简	7
	HTML5 移动游戏开发高级编程	7
	1.9. 《网页游戏开发秘笈》(（美）伯查德...)【	8
	Atitit.cocos开发第一个游戏.docx	9
	Atitit.h5适合什么样的游戏.docx	9

游戏引擎市场地位
目前，占有率领先移动游戏引擎主要有Cocos2d-x、Unity3D、FlashAIR、Unreal、Corona等。不同的统计方给出的数据各有差异，但总体来讲，行业首选的游戏引擎，主要都集中在Cocos2d-x与Unity3D之上。
从全球市场份额数据来看，主要覆盖中端市场的Unity相对领先，Cocos2d-x则主要占据高端与低端市场，约占1/4市场。但值得注意的是另一个数据是，在中国，Cocos2d-x则相对领先。在中国的2D手机游戏开发中，Cocos2d-x引擎的份额超过70%。
根据触控科技数据，国内现有45款月收入超千万手游中，30个基于Cocos2d-x开发，2013年手机游戏产业的22起手游并购案中，收购股权大于51%20起，其中13起的代表游戏均基于Cocos2d-x开发。
注：截至2013年12月10日数据更新，国内已有47款月收入超千万手游，其中32款基于Cocos2d-x开发。[2-3] 
cocos2d家族成员
cocos2d是一个基于MIT协议的开源框架，用于构建游戏、应用程序和其他图形界面交互应用。可以让你在创建自己的多平台游戏时节省很多的时间。
Cocos2d也拥有几个主要版本，包括Cocos2d-iPhone、Cocos2d-X，以及被社区普遍看好的Cocos2d-HTML5和JavaScript bindings for Cocos2d-X。
Cocos2d-html5 ： Cocos2d-HTML5 是基于 HTML5 规范集的 Cocos2d引擎分支，具有跨平台的能力和强大的性能，是 Cocos2d 系列引擎随着互联网技术演进而产生的一个分支，该分支基于 HTML5 规范集，目标是可对游戏进行跨平台部署，Cocos2d-HTML5 采用 MIT 开源协议，设计上保持Cocos2d家族的传统架构，并可联合 Cocos2d-x JavaScript-binding 接口，最大程度地实现游戏代码在不同平台上的复用。
JSB ：Cocos2d-x JavaScript-binding 是使用 SpiderMonkey 引擎实现 C++ 接口到 JavaSciprt 的绑定方案，它可以使用 Js 快速开发游戏，以更简单的语法实现功能，并且能与 Cocos2D-HTML5 相互兼容，使同一套代码，运行两个平台，这是相比使用 Lua 实现的一个明显优势。
Cocos Studio ：Cocos Studio 是一套基于 Cocos2d-x 引擎的工具集，包括 UI编辑器，动画编辑器，场景编辑器和数据编辑器。 UI 编辑器和动画编辑器主要面向美术，而场景编辑器和数据编辑器则面向游戏策划，这四个工具合在一起构成了一套完整的游戏开发体系，帮助开发者进一步降低开发难度，提高开发效率，减少开发成本。[4] 
 从下表可知，不同分支引擎支持不同的目标平台并使用不同的编程语言。
分支引擎
编程语言
平台
Cocos2d
Python
桌面操作系统
Cocos2d-iphone
Objective-C, JavaScript
iOS
Cocos2d-x
C++, Lua, JavaScript
参见支持平台和编程语言部分
Cocos2d-html5
JavaScript
支持HTML5的浏览器
ShinyCocos
Ruby
iOS
Cocos2d-windows
C++
Windows XP/7
Cocos2d-android
Java
Android
Cocos2d-android-1
Java
Android
Cocos2d-xna
C#
Microsoft and MonoGame platforms
Cocos2d-javascript
JavaScript
支持HTML5的浏览器
Cocos-net
C#
Mono-supported 平台
Cocos3d
Objective-C
iOS




粒子系统
简介
粒子系统是指计算机图形学中模拟特定现象的技术，它在模仿自然现象、物理现象及空间扭曲上具备得天独厚的优势，为我们实现一些真实自然而又带有随机性的特效（如爆炸、烟花、水流）提供了方便。Cocos2d-x引擎中就为我们提供了强大的粒子系统，以下是粒子系统的继承关系图：
粒子属性
一个强大的粒子系统它必然具备了多种多样的属性，这样才能配置出多样的粒子。下面就来看看粒子系统的主要属性吧。
主要属性：
_duration 发射器生存时间，即它可以发射粒子的时间，注意这个时间和粒子生存时间不同。单位秒，-1表示永远；粒子发射结束后可点击工具栏的播放按钮再次发射
_emissionRate 每秒喷发的粒子数目
_emitterMode 喷发器模式，有重力模式（GRAVITY）和半径模式（RADIUS，也叫放射模式）两种
_totalParticles 场景中存在的最大粒子数目，往往与_emissionRate配合起来使用
_isAutoRemoveOnFinish 粒子结束时是否自动删除
重力模式（modeA）：
顾名思义，重力模式模拟重力，可让粒子围绕一个中心点移近或移远，它的优点是非常动态，而且移动有规则。下列各属性只在重力模式下起作用。
gravity 重力X
radiaAccel 粒子径向加速度，即平行于重力方向的加速度
radiaAccelVar 粒子径向加速度变化范围
speed 速度
speedVar 速度变化范围
tangentialAccel 粒子切向加速度，即垂直于重力方向的加速度
tangentialAccelVar 粒子切向加速度变化范围
半径模式（modeB）：
半径模式可以使粒子以圆圈方式旋转，它也可以创造螺旋效果让粒子急速前进或后退。下列各属性只在半径模式下起作用。
endRadius 结束半径
endRadiusVar 结束半径变化范围，即结束半径值的范围在 （endRadius - endRadiusVar） 和 （endRadius + endRadiusVar ）之间，下面类似。
rotatePerSecond 粒子每秒围绕起始点的旋转角度
rotatePerSecondVar 粒子每秒围绕起始点的旋转角度变化范围
startRadius 初始半径
startRadiusVar 初始半径变化范围

生命属性：


_life 粒子生命，即粒子的生存时间

_lifeVar 粒子生命变化范围
大小属性：
_endSize 粒子结束时的大小，-1表示和初始大小一致
_endSizeVar 粒子结束大小的变化范围
_startSize 粒子的初始大小
_startSizeVar 粒子初始大小的变化范围
角度属性：
_angle 粒子角度
_angleVar 粒子角度变化范围
颜色属性：
_endColor 粒子结束颜色
_endColorVar 粒子结束颜色变化范围
_startColor 粒子初始颜色
_startColorVar 粒子初始颜色变化范围
如果你不想编辑出五颜六色的粒子效果，那应该把_endColorVar，_startColorVar尽量设置为（0, 0, 0, 0)。
位置属性:
_positionType 粒子位置类型，有自由模式（FREE）、相对模式（RELATIVE）和打组模式（GROUPED）三种
_posVar 发射器位置的变化范围（横向和纵向）
_sourcePosition 发射器原始坐标位置
Free自由模式，相对于屏幕自由，不会随粒子节点移动而移动（可产生火焰、蒸汽等效果）；Relative相对模式，相对于被绑定的Node静止，粒子发射器会随Node移动而移动，可用于制作移动角色身上的特效等等；Grouped打组模式是相对于发射点的，粒子随发射器移动而移动。
自旋属性：
_endSpin 粒子结束自旋角度
_endSpinVar 粒子结束自旋角度变化范围
_startSpin 粒子开始自旋角度
_startSpinVar 粒子开始自旋角度变化范围
纹理渲染属性:
_texture 粒子贴图纹理

骨骼动画详解－Spine
游戏中人物的走动，跑动，攻击等动作是必不可少，实现它们的方法一般采用帧动画或者骨骼动画。
帧动画与骨骼动画的区别在于：帧动画的每一帧都是角色特定姿势的一个快照，动画的流畅性和平滑效果都取决于帧数的多少。而骨骼动画则是把角色的各部分身体部件图片绑定到一根根互相作用连接的“骨头”上，通过控制这些骨骼的位置、旋转方向和放大缩小而生成的动画。
骨骼动画比传统的逐帧动画要求更高的处理器性能，但同时它也具有更多的优势，比如：
更少的美术资源： 骨骼动画的资源是一块块小的角色部件（比如：头、手、胳膊、腰等等），美术再也不用提供每一帧完整的图片了，这无疑节省了资源大小，能为您节省出更多的人力物力更好的投入到游戏开发中去。
更小的体积： 帧动画需要提供每一帧图片。而骨骼动画只需要少量的图片资源，并把骨骼的动画数据保存在一个 json 文件里面（后文会提到），它所占用的空间非常小，并能为你的游戏提供独一无二的动画。
更好的流畅性： 骨骼动画使用差值算法计算中间帧，这能让你的动画总是保持流畅的效果。
装备附件： 图片绑定在骨骼上来实现动画。如果你需要可以方便的更换角色的装备满足不同的需求。甚至改变角色的样貌来达到动画重用的效果。
不同动画可混合使用： 不同的骨骼动画可以被结合到一起。比如一个角色可以转动头部、射击并且同时也在走路。
程序动画： 可以通过代码控制骨骼，比如可以实现跟随鼠标的射击，注视敌人，或者上坡时的身体前倾等效果

Cocos2d-x游戏开发实战精解
第1章 初识Cocos2d-x
第2章 Cocos2d-x基础知识学习
第3章 在屏幕上显示内容
第4章 实现交互的功能
第5章 让人物动起来
第6章 定时器的原理及使用
第7章 地图系统的使用
第8章 Cocos2d-x中的粒子系统
第9章 在Cocos2d-x中使用物理引擎
第10章 存储和网络
第11章 高级UI控件
第12章 学习使用Cocos Studio
第13章 Cocos2d-x中的设计模式
第14章 2048游戏实例
第15章 连连看游戏实战
第16章 实战Popstar
第17章 实战纵版射击游戏
第18章 简单的纸牌游戏
第19章 最后的一点补充

《Unity 5.X 3D游戏开发技术详解与典型案例》(吴亚峰...)【简 
第1章 Unity基础以及开发环境的搭建	1
第2章 Unity集成开发环境详解	27
第3章 Unity脚本程序开发	71
第4章 Unity 3D图形用户界面基础	95
第5章 Unity 3D 第三方2D
第6章 物理引擎	213
第7章 着色器—Shader	281
第8章 3D游戏开发的常用技术	337
第9章 光影效果的使用	375
第10章 模型与动画	419
第11章 地形与寻路技术	465
第12章 游戏资源更新	483
第13章 多线程技术与网络开发	499
第14章 Unity 2D游戏开发	541
第15章 常用性能优化技术	575
第16章 综合案例—指间足球	585


HTML5 移动游戏开发高级编程

　第1章　先飞后走，先难后易
　第2章　从玩具到游戏
　第3章　试飞结束，向移动进发
　第4章　移动设备上的HTML5
　第5章　了解一些有用的库
　第6章　成为一个良好的移动市民
　第7章　了解HTML5游戏开发环境
　第8章　在命令行上运行JavaScript
　第9章　自建Quintus引擎(1)
　第10章　自建Quintus引擎(2)
　第11章　自建Quintus引擎(3)
　第12章　使用CSS3构建游戏
　第13章　制作一个CSS3 RPG游戏
　第14章　使用SVG和物理引擎构建游戏
　第15章　了解HTML5的杰出画布
　第16章　实现动画
　第17章　运用像素
　第18章　创建一个2D平台动作游戏
　第19章　构建一个画布编辑器
　第20章　构建在线社交游戏
　第21章　实现实时交互
　第22章　构建非传统风格的游戏
　第23章　通过地理位置定位
　第24章　查询设备的方向和加速
　第25章　播放音效：移动设备的罩门
　第26章　使用HTML5游戏引擎
　第27章　瞄准应用商店
　第28章　挖掘下一个热点


《网页游戏开发秘笈》(（美）伯查德...)【 
第1章　问答游戏  
第2章　文字冒险游戏  
第3章　派对游戏  
第4章　解谜游戏  
第5章　平台游戏  
第6章　格斗游戏  
第7章　飞行射击游戏  
第8章　第一人称射击游戏  
第9章　角色扮演游戏  
第10章　即时战略游戏  
第11章　如何继续提升游戏开发水平  
Atitit.cocos开发第一个游戏.docx
Atitit.h5适合什么样的游戏.docx
参考资料
[入门教程]使用Cocos2d-html5游戏引擎编写一个简单的游戏 第九回合：碰撞检测 _ Cocos2d-x - CocoaChina CocoaChina_让移动开发更简单.html

《Cocos2d-x游戏开发实战精解》(欧桐桐...)【简介_书评_在线阅读】 - 当当图书.html

