Atitit.接口到底可不可以实例化





接口是不能直接实例化的，你这里的d必然是某一个实现了IDependency 借口的class传递进来的。
不过也经常这样用到，看上去是直接实例化：
Runnable task = new Runnable() {
  public void run() {
   ..
  }
};


接口可以被实例化的。。但是语法不是简单的 Set s = new Set()
而是 Set s = new Set(){{}};
需要后面带方法体。。。



接口是可以实例化或者不可以实例化，都是理解对的，只是角度不同。。站在源码的角度看，接口是可以实例化的，与类的实例化只有稍微差异，将来也是完全可以做到一样的语法。。
当然，站在bytecode角度看，接口和类是俩个不同的东西，不能实例化。。
作为软件人员，我想我们还是应该从我们常接触的源码角度来说比较好。。 

如果站在底层机器码的角度看，java的面向对象是是没有的。接口也是没有的，类也是没有的，难道我们可以说java的这些概念都错了吗？？当然不是，因为我们是站在java的角度看的


  其实这是一种虚拟的实例化接口，可以理解为间接实例化接口。在这个setOnClickListener()方法中，传入的重点是实现这个接口的 onClick()方法，当我们在View被点击时这个方法会被调用，也就是会产生我们所需求的相应的监听事件。那么在这个方法被调用之后，其实这个 OnClickListener接口是不存在的。也就是说这个所谓的假象实例化其实是醉翁之意不在实例化接口而是在于OnClick()方法的实现。

